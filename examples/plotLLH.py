"""STORMlikeChains Example: Plot the log-likelihood data.

This example demonstrates how to plot the log-likelihood data that was
generated by the script calcLLH.py.

The data from the last step is in the file example_LLH_Data.npy. The
figure will not likely look as nice as the ones in the manuscript
because the polymer parameter values that were simulated do not fully
sample the relevant area of the parameter space and because the 'extent'
parameter inside the options dictionary below needs to be tuned.

"""

__author__ = 'Kyle M. Douglass'
__email__  = 'kyle.douglass@epfl.ch'

# Ensure the script can access STORMlikeChains during development.
# Add STORMlikeChains path to PYTHONPATH during installation.
import sys
if len(sys.argv) > 1:
    if sys.argv[1] == '-d':
        sys.path.append('/home/douglass/src/STORMlikeChains/')

# Example starts here
import matplotlib.pyplot as plt
import numpy as np

from STORMlikeChains import STORMlikeChains_helpers as Helpers

# Load the dataset into memory
dataset = 'example_LLH_Data.npy'
with open(dataset, mode = 'rb') as inFile:
    data = np.load(inFile)

# Unpack the data
results = {}
results['packRatio']   = data['f0']
results['pLength']     = data['f1']
(_, _, results['LLH']) = Helpers.unpackLLH(data)

# Plot the log-likelihood data
options = {'origin' : 'lower',
           'extent' : [results['packRatio'].min(),
                       results['packRatio'].max(),
                       results['pLength'].min(),
                       results['pLength'].max()],
           'aspect' : 'auto'}

fig = plt.figure(figsize = (8,6), dpi = 90)

plt.imshow(results['LLH'], **options)
cbar = plt.colorbar(label = 'Log-likelihood')

plt.xlim(results['packRatio'].min(), results['packRatio'].max())
plt.ylim(  results['pLength'].min(),   results['pLength'].max())
plt.xlabel('Packing ratio, bp/nm')
plt.ylabel('Persistence length, nm')
plt.show()
